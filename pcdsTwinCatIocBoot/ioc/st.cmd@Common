#!../../bin/_ARCH_/_APPNAME_

< envPaths
epicsEnvSet("IOCNAME", "_IOC_" )
epicsEnvSet("ENGINEER", "_USER_" )
epicsEnvSet("LOCATION", "_IOCPVROOT_" )
epicsEnvSet("IOCSH_PS1", "$(IOCNAME)> " )

# For single PLC IOCs, modify only the following:
epicsEnvSet("PLC_HOSTNAME", "_PLC_HOSTNAME_")
epicsEnvSet("PLC_NETID",    "_PLC_HOSTNAME_.1.1")
epicsEnvSet("PLC_ADS_PORT", "851")
epicsEnvSet("PLC_PORT", "ADS_1")

cd "$(TOP)"

# Run common startup commands for linux soft IOC's
< /reg/d/iocCommon/All/pre_linux.cmd

# Register all support components
dbLoadDatabase("dbd/_APPNAME_.dbd")
_CSAFEAPPNAME__registerRecordDeviceDriver(pdbbase)

# Connect to PLCs here:
adsAsynPortDriverConfigure("$(PLC_PORT)", "$(PLC_HOSTNAME)", "$(PLC_NETID)", "$(PLC_ADS_PORT)", 1000, 0, 0, 500, 1000, 1000, 0)
asynSetTraceMask("$(PLC_PORT)", -1, 0x41)
asynSetTraceIOMask("$(PLC_PORT)", -1, 6)
asynSetTraceInfoMask("$(PLC_PORT)", -1, 15)

# Load record instances
# dbLoadRecords("db/_APPNAME_.db","P=,PORT=$(PLC_PORT)")
dbLoadRecords("","P=,PORT=$(PLC_PORT)")

dbLoadRecords("db/iocAdmin.db",	"P=_IOCPVROOT_,IOC=_IOCPVROOT_" )
dbLoadRecords("db/save_restoreStatus.db", "P=_IOCPVROOT_,IOC=_IOCPVROOT_" )

# Setup autosave
set_savefile_path( "$(IOC_DATA)/$(IOC)/autosave" )
set_requestfile_path( "$(TOP)/autosave" )
save_restoreSet_status_prefix( "_IOCPVROOT_:" )
save_restoreSet_IncompleteSetsOk( 1 )
save_restoreSet_DatedBackupFiles( 1 )
set_pass0_restoreFile( "$(IOC).sav" )
set_pass1_restoreFile( "$(IOC).sav" )

# Initialize the IOC and start processing records
iocInit()

# Start autosave backups
create_monitor_set( "$(IOC).req", 5, "" )

# All IOCs should dump some common info after initial startup.
< /reg/d/iocCommon/All/post_linux.cmd
